{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lrafa\\\\Documents\\\\Thesis_Application\\\\thesis-app\\\\my-app\\\\Frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Axios from 'axios';\n\n// https://www.geeksforgeeks.org/what-is-react-router-dom/\n// https://www.simplilearn.com/tutorials/reactjs-tutorial/login-page-in-reactjs\n\n// https://www.youtube.com/watch?v=hYYd_3Tz6Zo -- Send data from backend to frontend \n// This will be used to get verify that the usernames and passwords are correct and exist within the database\n// We will then send a response back to the user saying whether or not the login was successful\n// There userID / Username will then be kept on the corner of the screen showing who they are logged in as\n// When they logout their data  stored in the points and tasks area will be saved to the database in the dailyprogress table\n\n// https://apidog.com/blog/http-methods/ -- HTTP Methods\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  const [data, setData] = useState([]);\n  const handleEnterKey = event => {\n    if (event.key === 'Enter') {\n      signIn();\n    }\n  };\n  function handleChangeUN(event) {\n    setUsername(event.target.value);\n  }\n  function handleChangePW(event) {\n    setPassword(event.target.value);\n  }\n  function signIn() {\n    fetch('http://localhost:3003/api/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Logging in');\n    }).catch(error => console.error('Error:', error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: handleChangeUN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleChangePW,\n          onKeyDown: handleEnterKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: signIn,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"5XECW6Azr410A32M5bwhbDme+Oo=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","loginStatus","setLoginStatus","data","setData","handleEnterKey","event","key","signIn","handleChangeUN","target","value","handleChangePW","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lrafa/Documents/Thesis_Application/thesis-app/my-app/Frontend/src/Login.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Axios from 'axios';\r\n\r\n\r\n// https://www.geeksforgeeks.org/what-is-react-router-dom/\r\n// https://www.simplilearn.com/tutorials/reactjs-tutorial/login-page-in-reactjs\r\n\r\n\r\n// https://www.youtube.com/watch?v=hYYd_3Tz6Zo -- Send data from backend to frontend \r\n    // This will be used to get verify that the usernames and passwords are correct and exist within the database\r\n        // We will then send a response back to the user saying whether or not the login was successful\r\n        // There userID / Username will then be kept on the corner of the screen showing who they are logged in as\r\n        // When they logout their data  stored in the points and tasks area will be saved to the database in the dailyprogress table\r\n\r\n\r\n// https://apidog.com/blog/http-methods/ -- HTTP Methods\r\nexport default function Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [data, setData] = useState([]);\r\n\r\n    const handleEnterKey = (event) => {\r\n        if (event.key === 'Enter') {\r\n          signIn();\r\n        }\r\n      }\r\n\r\n      function handleChangeUN(event) {\r\n        setUsername(event.target.value);\r\n      }\r\n\r\n      function handleChangePW(event) {\r\n        setPassword(event.target.value);\r\n      }\r\n\r\n      function signIn() {\r\n        fetch('http://localhost:3003/api/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({username, password }),\r\n            }) \r\n            .then(response => response.json())\r\n            .then(data => {\r\n              console.log('Logging in');\r\n            }) \r\n            .catch(error => console.error('Error:', error)); \r\n      }\r\n\r\n\r\n    return (\r\n        <div className = 'Login'>\r\n            <h1>Login</h1>\r\n            <div>\r\n                <input\r\n                    type = \"text\"\r\n                    placeholder = \"Username\"\r\n                    value = {username}\r\n                    onChange = {handleChangeUN}\r\n                />\r\n                <div>\r\n                <input\r\n                    type = \"text\"\r\n                    placeholder = \"Password\"\r\n                    value = {password}\r\n                    onChange = {handleChangePW}\r\n                    onKeyDown = {handleEnterKey}\r\n                />\r\n                </div>\r\n                <button\r\n                    className = 'login-button'\r\n                    onClick = {signIn}>\r\n                    Login\r\n                </button>\r\n            </div>\r\n        </div>\r\n                    \r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}