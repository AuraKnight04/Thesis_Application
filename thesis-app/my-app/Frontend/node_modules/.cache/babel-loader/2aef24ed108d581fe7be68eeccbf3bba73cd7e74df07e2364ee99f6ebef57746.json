{"ast":null,"code":"import React,{useState}from\"react\";import Axios from'axios';// https://www.geeksforgeeks.org/what-is-react-router-dom/\n// https://www.simplilearn.com/tutorials/reactjs-tutorial/login-page-in-reactjs\n// https://www.youtube.com/watch?v=hYYd_3Tz6Zo -- Send data from backend to frontend \n// This will be used to get verify that the usernames and passwords are correct and exist within the database\n// We will then send a response back to the user saying whether or not the login was successful\n// There userID / Username will then be kept on the corner of the screen showing who they are logged in as\n// When they logout their data  stored in the points and tasks area will be saved to the database in the dailyprogress table\n// https://apidog.com/blog/http-methods/ -- HTTP Methods\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[loginStatus,setLoginStatus]=useState('');const[data,setData]=useState([]);const handleEnterKey=event=>{if(event.key==='Enter'){signIn();}};function handleChangeUN(event){setUsername(event.target.value);}function handleChangePW(event){setPassword(event.target.value);}function signIn(){fetch('http://localhost:3002/api/signin',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})}).then(response=>response.json()).then(data=>{console.log('Logging in');}).catch(error=>console.error('Error:',error));}return/*#__PURE__*/_jsxs(\"div\",{className:\"Login\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:handleChangeUN}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Password\",value:password,onChange:handleChangePW,onKeyDown:handleEnterKey})}),/*#__PURE__*/_jsx(\"button\",{className:\"login-button\",onClick:signIn(),children:\"Login\"})]})]});}","map":{"version":3,"names":["React","useState","Axios","jsx","_jsx","jsxs","_jsxs","Login","username","setUsername","password","setPassword","loginStatus","setLoginStatus","data","setData","handleEnterKey","event","key","signIn","handleChangeUN","target","value","handleChangePW","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","className","children","type","placeholder","onChange","onKeyDown","onClick"],"sources":["/Users/rafito_vazquez/Documents/GitHub/Thesis_Application/thesis-app/my-app/Frontend/src/Login.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Axios from 'axios';\n\n\n// https://www.geeksforgeeks.org/what-is-react-router-dom/\n// https://www.simplilearn.com/tutorials/reactjs-tutorial/login-page-in-reactjs\n\n\n// https://www.youtube.com/watch?v=hYYd_3Tz6Zo -- Send data from backend to frontend \n    // This will be used to get verify that the usernames and passwords are correct and exist within the database\n        // We will then send a response back to the user saying whether or not the login was successful\n        // There userID / Username will then be kept on the corner of the screen showing who they are logged in as\n        // When they logout their data  stored in the points and tasks area will be saved to the database in the dailyprogress table\n\n\n// https://apidog.com/blog/http-methods/ -- HTTP Methods\nexport default function Login() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginStatus, setLoginStatus] = useState('');\n    const [data, setData] = useState([]);\n\n    const handleEnterKey = (event) => {\n        if (event.key === 'Enter') {\n          signIn();\n        }\n      }\n\n      function handleChangeUN(event) {\n        setUsername(event.target.value);\n      }\n\n      function handleChangePW(event) {\n        setPassword(event.target.value);\n      }\n\n      function signIn() {\n        fetch('http://localhost:3002/api/signin', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({username, password }),\n            }) \n            .then(response => response.json())\n            .then(data => {\n              console.log('Logging in');\n            })\n            .catch(error => console.error('Error:', error)); \n      }\n\n\n    return (\n        <div className = 'Login'>\n            <h1>Login</h1>\n            <div>\n                <input\n                    type = \"text\"\n                    placeholder = \"Username\"\n                    value = {username}\n                    onChange = {handleChangeUN}\n                />\n                <div>\n                <input\n                    type = \"text\"\n                    placeholder = \"Password\"\n                    value = {password}\n                    onChange = {handleChangePW}\n                    onKeyDown = {handleEnterKey}\n                />\n                </div>\n                <button\n                    className = 'login-button'\n                    onClick = {signIn()}>\n                    Login\n                </button>\n            </div>\n        </div>\n                    \n\n\n\n\n    );\n\n\n\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAGzB;AACA;AAGA;AACI;AACI;AACA;AACA;AAGR;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAE5B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAe,cAAc,CAAIC,KAAK,EAAK,CAC9B,GAAIA,KAAK,CAACC,GAAG,GAAK,OAAO,CAAE,CACzBC,MAAM,CAAC,CAAC,CACV,CACF,CAAC,CAED,QAAS,CAAAC,cAAcA,CAACH,KAAK,CAAE,CAC7BR,WAAW,CAACQ,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CACjC,CAEA,QAAS,CAAAC,cAAcA,CAACN,KAAK,CAAE,CAC7BN,WAAW,CAACM,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CACjC,CAEA,QAAS,CAAAH,MAAMA,CAAA,CAAG,CAChBK,KAAK,CAAC,kCAAkC,CAAE,CACtCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACrB,QAAQ,CAAEE,QAAS,CAAC,CAC1C,CAAC,CAAC,CACDoB,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAChB,IAAI,EAAI,CACZmB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAIH,OAAO,CAACG,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAAC,CACrD,CAGF,mBACI9B,KAAA,QAAK+B,SAAS,CAAG,OAAO,CAAAC,QAAA,eACpBlC,IAAA,OAAAkC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhC,KAAA,QAAAgC,QAAA,eACIlC,IAAA,UACImC,IAAI,CAAG,MAAM,CACbC,WAAW,CAAG,UAAU,CACxBlB,KAAK,CAAId,QAAS,CAClBiC,QAAQ,CAAIrB,cAAe,CAC9B,CAAC,cACFhB,IAAA,QAAAkC,QAAA,cACAlC,IAAA,UACImC,IAAI,CAAG,MAAM,CACbC,WAAW,CAAG,UAAU,CACxBlB,KAAK,CAAIZ,QAAS,CAClB+B,QAAQ,CAAIlB,cAAe,CAC3BmB,SAAS,CAAI1B,cAAe,CAC/B,CAAC,CACG,CAAC,cACNZ,IAAA,WACIiC,SAAS,CAAG,cAAc,CAC1BM,OAAO,CAAIxB,MAAM,CAAC,CAAE,CAAAmB,QAAA,CAAC,OAEzB,CAAQ,CAAC,EACR,CAAC,EACL,CAAC,CAUd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}