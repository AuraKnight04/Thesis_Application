{"ast":null,"code":"var _jsxFileName = \"/Users/rafito_vazquez/Documents/GitHub/Thesis_Application/thesis-app/my-app/src/TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// after properly working on the tast list the tasks are made directly in the task list not in the task item\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  toggleCompleted\n}) {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(false);\n  function handleChange() {\n    setIsCompleted(!isCompleted);\n    toggleCompleted(task.id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textDecoration: isCompleted ? 'line-through' : 'none',\n      cursor: 'pointer'\n    },\n    onClick: handleChange,\n    children: task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskItem, \"LITZRDMGs9gT4S6K0mtRu7r05aI=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","toggleCompleted","_s","isCompleted","setIsCompleted","handleChange","id","style","textDecoration","cursor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafito_vazquez/Documents/GitHub/Thesis_Application/thesis-app/my-app/src/TaskItem.js"],"sourcesContent":["import React , {useState} from 'react';\n\n// after properly working on the tast list the tasks are made directly in the task list not in the task item\nfunction TaskItem({task, toggleCompleted}) {\n    const [isCompleted, setIsCompleted] = useState(false);\n\n    function handleChange() {\n        setIsCompleted(!isCompleted);\n        toggleCompleted(task.id);\n    }\n\n    return (\n        <div\n            style={{\n        textDecoration: isCompleted ? 'line-through' : 'none',\n        cursor: 'pointer',\n      }}\n      onClick={handleChange}\n    >\n      {task}\n        </div>\n    );\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAC;EAACC,IAAI;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErD,SAASS,YAAYA,CAAA,EAAG;IACpBD,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5BF,eAAe,CAACD,IAAI,CAACM,EAAE,CAAC;EAC5B;EAEA,oBACIR,OAAA;IACIS,KAAK,EAAE;MACXC,cAAc,EAAEL,WAAW,GAAG,cAAc,GAAG,MAAM;MACrDM,MAAM,EAAE;IACV,CAAE;IACFC,OAAO,EAAEL,YAAa;IAAAM,QAAA,EAErBX;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd;AAACb,EAAA,CAnBQH,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}